/*
 *  The Grid Patch Class
 *
 *  Author: Ht
 *  Email : waytofall916 at gmail dot com
 *
 *  Copyright (C) Ht-waytofall. All rights reserved.
 */


#ifndef __H_GRID_PATCH__
#define __H_GRID_PATCH__

#include "mesh_patch.h"

/* a patch generated by the uniform grid partitioning algorithm */
class HGridPatch: public HMeshPatch {
public:
	/*
	 * grid_index:	the tripled index of the uniform grid
	 *				concerning the patch when using a uniform
	 *				patch partitioning algorithm
	 */
	bool openForWrite(const char* dir_path, const HTripleIndex<uint> grid_index);
	bool openForRead(const char* dir_path, const HTripleIndex<uint> grid_index);
	bool patchToPly(const char* dir_path, const HTripleIndex<uint> grid_index);
	bool pairCollapse(
			char* dir_path, HTripleIndex<uint> grid_index, uint vert_start_id,
			uint target, TargetOption target_opt = target_vert);
	bool pairCollapseToPly(
			char* dir_path, HTripleIndex<uint> grid_index, 
			uint total_verts, uint total_target);

private:
	inline void getPatchPath(const char* dir_path, const HTripleIndex<uint> grid_index, 
								char *vert_name, char *face_name);
	inline void getVertPatchName(const HTripleIndex<uint> &grid_index, char *buf);
	inline void getFacePatchName(const HTripleIndex<uint> &grid_index, char *buf);
};

void HGridPatch::getVertPatchName(const HTripleIndex<uint> &grid_index, char *buf) {

	ostringstream oss_name;
	oss_name << "vert_" << grid_index.i << "_" << grid_index.j << "_" << grid_index.k;
	stringToCstr(oss_name.str(), buf);
}

void HGridPatch::getFacePatchName(const HTripleIndex<uint> &grid_index, char *buf) {

	ostringstream oss_name;
	oss_name << "face_" << grid_index.i << "_" << grid_index.j << "_" << grid_index.k;
	stringToCstr(oss_name.str(), buf);
}

void HGridPatch::getPatchPath(const char* dir_path, const HTripleIndex<uint> grid_index, 
				  char *vert_name, char *face_name) {

	string str;

	getVertPatchName(grid_index, vert_name);
	getFacePatchName(grid_index, face_name);

	if (dir_path) {
	  str = dir_path;
	  str += hPathSeperator();
	}
	str += vert_name;
	stringToCstr(str, vert_name);

	str.clear();
	if (dir_path) {
	  str = dir_path;
	  str += hPathSeperator();
	}
	str += face_name;
	stringToCstr(str, face_name);
}

#endif //__H_GRID_PATCH__